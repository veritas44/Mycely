{
  "name": "telehash",
  "version": "0.2.12",
  "main": "index.js",
  "browserify": "browser.js",
  "dependencies": {
    "telehash-cs1a": "0.0.x",
    "telehash-cs2a": "0.0.x",
    "telehash-cs3a": "0.0.x",
    "telehash-ipv4": "0.0.x",
    "telehash-ipv6": "0.0.x",
    "telehash-http": "0.0.x",
    "telehash-webrtc": "0.0.x",
    "telehash-telesocket": "0.0.x",
    "telehash-thtp": "0.0.x",
    "telehash-token": "0.0.x",
    "telehash-stream": "0.0.x",
    "telehash-seeds": "0.0.x",
    "telehash-js": "0.1.x"
  },
  "devDependencies": {
    "path-extra": "*",
    "optimist": "*"
  },
  "scripts": {
    "start": "node ./seed.js",
    "seed": "node ./seed.js"
  },
  "keywords": [
    "telehash",
    "crypto",
    "p2p",
    "dht",
    "json",
    "mesh"
  ],
  "description": "A simplified telehash library for node and browserify",
  "homepage": "https://github.com/telehash/node-telehash",
  "repository": {
    "type": "git",
    "url": "https://github.com/telehash/node-telehash.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/telehash/node-telehash/raw/master/LICENSE"
    }
  ],
  "author": {
    "name": "Jeremie Miller",
    "email": "jeremie@jabber.org",
    "url": "http://jeremie.com/"
  },
  "maintainers": [
    {
      "name": "Jeremie Miller",
      "email": "jeremie@jabber.org",
      "url": "http://jeremie.com/"
    }
  ],
  "engines": {
    "node": "0.10.x",
    "npm": ">1.2.x"
  },
  "readme": "# Overview\n\n[![telehash](https://nodei.co/npm/telehash.png)](https://nodei.co/npm/telehash/)\n\t\nThis module presents a simple high-level API for using [telehash](https://github.com/telehash/telehash.org/blob/master/protocol.md) for both node and browserify.\n\nThe browser crypto that powers this is only possible thanks to the incredible work done by the team behind [Forge](https://github.com/digitalbazaar/forge), [Tom Wu](http://www-cs-students.stanford.edu/~tjw/), and the [Sanford Javascript Crypto Library](https://github.com/bitwiseshiftleft/sjcl).\n\n# Seeds\n\nTelehash apps always need one or more seeds to bootstrap from, the default development testing ones are in [seeds.json](https://github.com/telehash/thjs/blob/master/seeds.json).  You can run your own seed via `npm start` or manually via `node seed.js`.  The JSON object from the seed can be passed in to the init function (shown below) as \"seeds\":{...} in the args or stored in a seeds.json file with that passed in.\n\n# Library Interface\n\n## Identity / Keypair Generation\n\nTo create a new hashname:\n\n```js\nvar th = require(\"telehash\");\nth.init({}, function(err, self){\n  if(err) return console.log(\"hashname generation/startup failed\",err);\n  // self.id contains a the public/private keys and parts\n});\n```\n\n## Hashname Initialization / Startup\n\nNeeds an id object from a previously created self.id to load the existing hashname from:\n\n```js\nvar th = require(\"telehash\");\nth.init({id:id}, function(err, self){\n  if(err) return console.log(\"hashname failed to come online\",err);\n  // use self.* now\n});\n```\n\n## Args\n\nThe first object passed in to the `load` function takes the following arguments:\n\n* **id** - An object previously created, or a string pointing to a file to load the object from.\n* **seeds** - An object in the [seeds](https://github.com/telehash/telehash.org/blob/master/seeds.md) format, or a string pointing to a file to load from.\n\n## API\n\nOnce you have a hashname running you can use the [common API](https://github.com/telehash/thjs#API) with it.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/telehash/node-telehash/issues"
  },
  "_id": "telehash@0.2.12",
  "_from": "telehash@"
}
